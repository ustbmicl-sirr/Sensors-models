version: 1
disable_existing_loggers: false

formatters:
  standard:
    format: '[%(asctime)s] [%(levelname)s] [%(name)s] %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'

  detailed:
    format: '[%(asctime)s] [%(levelname)s] [%(name)s:%(lineno)d] %(message)s'
    datefmt: '%Y-%m-%d %H:%M:%S'

  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: '%(asctime)s %(name)s %(levelname)s %(message)s'

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: standard
    stream: ext://sys.stdout

  training_file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/training/text/training.log
    maxBytes: 10485760  # 10MB
    backupCount: 5
    encoding: utf8

  testing_file:
    class: logging.handlers.RotatingFileHandler
    level: DEBUG
    formatter: detailed
    filename: logs/testing/text/testing.log
    maxBytes: 10485760
    backupCount: 5
    encoding: utf8

  backend_file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filename: logs/backend/application.log
    maxBytes: 10485760
    backupCount: 10
    encoding: utf8

  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: detailed
    filename: logs/backend/error.log
    maxBytes: 10485760
    backupCount: 10
    encoding: utf8

loggers:
  training:
    level: DEBUG
    handlers: [console, training_file]
    propagate: false

  testing:
    level: DEBUG
    handlers: [console, testing_file]
    propagate: false

  backend:
    level: INFO
    handlers: [console, backend_file, error_file]
    propagate: false

  uvicorn:
    level: INFO
    handlers: [console, backend_file]
    propagate: false

  uvicorn.access:
    level: INFO
    handlers: [backend_file]
    propagate: false

root:
  level: INFO
  handlers: [console]
